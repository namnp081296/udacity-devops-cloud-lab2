trigger:
- main

# Agent Pool
pool: lab02AgentPool

variables:
  azureServiceConnectionId: 'lab02ServiceConnection'
  
  webAppName: 'myflaskapp081296'

  # Environment name
  environmentName: 'flask-ml-service'

  projectRoot: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: lab02AgentPool
    steps:    
    - script: |
        python3.7 -m pip install --upgrade pip
        python3.7 -m pip install setup
        python3.7 -m pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'myStep 1'
    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
      workingDirectory: $(projectRoot)
      displayName: 'myStep 2'
    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
        make lint
      workingDirectory: $(projectRoot)
      displayName:  'myStep 3 - Run lint tests'
    - task: ArchiveFiles@2
      displayName: 'myStep 4 - Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'myStep 5 - Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy The Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : $(webAppName)'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
